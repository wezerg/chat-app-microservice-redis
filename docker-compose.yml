services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      # The Web port
      - "3000:3000"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Configuration File for Traefik
      - ./traefik.yml:/etc/traefik/traefik.yml
  frontend:
    build: ./spa
    depends_on:
      - hits-counter
      - auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatapp.rule=Host(`localhost`)"
      - "traefik.http.routers.chatapp.entrypoints=web"
    deploy:
      replicas: 1
  hits-counter:
    build: ./hits-counter
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hits.rule=Host(`localhost`) && Path(`/hits`)"
      - "traefik.http.routers.hits.entrypoints=web"
    environment: 
      - REDIS_URL=redis://redis
  auth:
    build: ./auth
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`localhost`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"
    environment: 
      - REDIS_URL=redis://redis
    deploy:
      replicas: 1
  chatrooms:
    build: ./chatrooms
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatrooms.rule=Host(`localhost`) && PathPrefix(`/chatrooms`)"
      - "traefik.http.routers.chatrooms.entrypoints=web"
    environment: 
      - REDIS_URL=redis://redis
    deploy:
      replicas: 1
  publisher:
    build: ./publisher
    depends_on:
      - redis
      - chatrooms
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.publisher.rule=Host(`localhost`) && PathPrefix(`/publish`)"
      - "traefik.http.routers.publisher.entrypoints=web"
    environment: 
      - REDIS_URL=redis://redis
    deploy:
      replicas: 1
  listener:
    build: ./listener
    depends_on:
      - redis
      - chatrooms
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.listener.rule=Host(`localhost`) && PathPrefix(`/listener`)"
      - "traefik.http.routers.listener.entrypoints=web"
    environment: 
      - REDIS_URL=redis://redis
    deploy:
      replicas: 1
  redis:
    image: redis